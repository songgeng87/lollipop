{"file":"research-DrJRzO82.js","mappings":";;;;;;;;;;;;;;;;;;AAAA,MAAe,aAAA,KAAA,iBAAA,mBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,mBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,mBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,mBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,mBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,kBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,mBAAA;ACAf,MAAe,aAAA,KAAA,iBAAA,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAM,QAAQ,SAAS;AAAA,MACrB,EAAE,OAAO,mCAAmC,MAAM,MAAM,UAAU,MAAM;AAAA,MACxE,EAAE,OAAO,gBAAgB,MAAM,MAAM,UAAU,MAAM;AAAA,MACrD;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,MACZ;AAAA,MACA,EAAE,OAAO,gBAAgB,MAAM,MAAM,UAAU,MAAM;AAAA,MACrD;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,UACL,EAAE,OAAO,iCAAiC,MAAM,QAAQ,QAAQ,MAAM;AAAA,UACtE,EAAE,OAAO,oBAAoB,MAAM,QAAQ,QAAQ,MAAM;AAAA,QAAA;AAAA,MAE7D;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,UACL,EAAE,OAAO,mBAAmB,MAAM,QAAQ,QAAQ,MAAM;AAAA,UACxD,EAAE,OAAO,yBAAyB,MAAM,QAAQ,QAAQ,MAAM;AAAA,QAAA;AAAA,MAElE;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,UACL,EAAE,OAAO,8BAA8B,MAAM,QAAQ,QAAQ,MAAM;AAAA,UACnE;AAAA,YACE,OAAO;AAAA,YACP,MAAM;AAAA,YACN,QAAQ;AAAA,UACV;AAAA,UACA,EAAE,OAAO,6BAA6B,MAAM,QAAQ,QAAQ,MAAM;AAAA,QAAA;AAAA,MAEtE;AAAA,MACA,EAAE,OAAO,gBAAgB,MAAM,MAAM,UAAU,MAAM;AAAA,IAAA,CACtD;AAGkB,QAAI,IAAI;AACrB,UAAA,aAAa,IAAI,EAAE;AACL,QAAI,CAAE,CAAA;AACJ,QAAI,CAAE,CAAA;AAQtB,UAAA,gBAAgB,CAAC,SAAS;AAC9B,iBAAW,QAAQ;AACb,YAAA,SAAkB,SAAA,eAAe,IAAI;AAC3C,UAAI,QAAQ;AACV,eAAO,eAAe,EAAE,UAAU,SAAA,CAAU;AAAA,MAAA;AAAA,IAEhD;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../assets/img/图片 1.png","../../../../assets/img/图片 2.png","../../../../assets/img/图片 3.png","../../../../assets/img/图片 4.png","../../../../assets/img/图片 5.png","../../../../assets/img/图片6.png","../../../../assets/img/图片 7.png","../../../../assets/img/图片 8.png","../../../../pages/research.vue"],"sourcesContent":["export default \"__VITE_ASSET__DHHsXDW$__\"","export default \"__VITE_ASSET__DjAlqsnO__\"","export default \"__VITE_ASSET__Q4hVjltt__\"","export default \"__VITE_ASSET__CMBHLDnj__\"","export default \"__VITE_ASSET__Conflhdb__\"","export default \"__VITE_ASSET__BeyoAmwP__\"","export default \"__VITE_ASSET__BBcFGPpD__\"","export default \"__VITE_ASSET__BFqqN3rx__\"","<script setup>\nimport { ref, onMounted, reactive } from \"vue\";\nimport TocList from \"@/components/TocList.vue\";\n\n// 数据定义在主模板页，增加 `expanded` 状态\nconst AList = reactive([\n  { title: \"Lollipop: Making SVM Extensible\", name: \"1t\", expanded: false },\n  { title: \"1.Background\", name: \"2t\", expanded: false },\n  {\n    title: \"2.Catalysts for Network Extension: Layer 2 - Path to Fragmentation\",\n    name: \"3t\",\n    expanded: false,\n  },\n  { title: \"3.Why Solana\", name: \"4t\", expanded: false },\n  {\n    title: \"4.What do we need?\",\n    name: \"5t\",\n    expanded: false,\n    child: [\n      { title: \"4.1What is Network Extension?\", name: \"5.1t\", active: false },\n      { title: \"4.2Market Demand\", name: \"5.2t\", active: false },\n    ],\n  },\n  {\n    title: \"5.Lollipop Introduction\",\n    name: \"6t\",\n    expanded: false,\n    child: [\n      { title: \"5.1Architecture\", name: \"6.1t\", active: false },\n      { title: \"5.2Why Polkadot Cloud\", name: \"6.2t\", active: false },\n    ],\n  },\n  {\n    title: \"6.Key Technology\",\n    name: \"7t\",\n    expanded: false,\n    child: [\n      { title: \"6.1SVM and Parallelization\", name: \"7.1t\", active: false },\n      {\n        title: \"6.2Cryptography Settlement Protocol based on SMT\",\n        name: \"7.2t\",\n        active: false,\n      },\n      { title: \"6.3Stateless Verification\", name: \"7.3t\", active: false },\n    ],\n  },\n  { title: \"7.Conclusion\", name: \"8t\", expanded: false },\n]);\n\n// 控制状态\nconst tocVisible = ref(true); // 目录是否显示\nconst activeItem = ref(\"\"); // 当前高亮的目录项\nconst allSections = ref([]); // 展平后的所有章节\nconst sectionRanges = ref([]); // 每个章节的有效范围\n\n// 切换目录显示状态\nconst toggleToc = () => {\n  tocVisible.value = !tocVisible.value;\n};\n\n// 设置当前高亮项\nconst setActiveItem = (name) => {\n  activeItem.value = name;\n  const target = document.getElementById(name);\n  if (target) {\n    target.scrollIntoView({ behavior: \"smooth\" });\n  }\n};\n\n// 扁平化数据结构\nconst flattenList = (list) => {\n  const result = [];\n  const traverse = (items) => {\n    items.forEach((item) => {\n      result.push(item);\n      if (item.child) traverse(item.child);\n    });\n  };\n  traverse(list);\n  return result;\n};\n\n// 初始化章节范围\nconst calculateSectionRanges = () => {\n  sectionRanges.value = []; // 清空范围列表\n\n  const addSectionRange = (section, nextSection) => {\n    const element = document.getElementById(section.name);\n    const nextElement = nextSection ? document.getElementById(nextSection.name) : null;\n\n    sectionRanges.value.push({\n      name: section.name,\n      start: element ? element.offsetTop : 0,\n      end: nextElement ? nextElement.offsetTop : document.body.scrollHeight,\n    });\n\n    if (section.child) {\n      section.child.forEach((child, index) => {\n        const nextChild = section.child[index + 1];\n        addSectionRange(child, nextChild || nextSection);\n      });\n    }\n  };\n\n  // 遍历章节并计算范围\n  AList.forEach((item, index) => {\n    const nextItem = AList[index + 1];\n    addSectionRange(item, nextItem);\n  });\n};\n\nconst handleScroll = () => {\n  const scrollPosition = window.scrollY + window.innerHeight / 2;\n\n  sectionRanges.value.forEach((range) => {\n    const section = AList.find((item) => item.name === range.name);\n    if (section) {\n      const inRange = scrollPosition >= range.start && scrollPosition < range.end;\n\n      // 更新父章节的expanded状态\n      section.expanded = inRange;\n\n      // 更新子章节的active状态\n      if (inRange && section.child) {\n        section.child.forEach((child) => {\n          const childElement = document.getElementById(child.name);\n          const childRange = sectionRanges.value.find((r) => r.name === child.name);\n\n          // 判断子章节是否在视口内\n          const childInRange =\n            scrollPosition >= childRange.start && scrollPosition < childRange.end;\n          child.active = childInRange;\n\n          // 如果子章节在视口内，父章节需要展开\n          if (childInRange) {\n            section.expanded = true;\n          }\n        });\n      } else if (!inRange && section.child) {\n        section.child.forEach((child) => {\n          child.active = false; // 滚动到大章节时，收起小章节的active状态\n        });\n      }\n    }\n  });\n};\n\n// 生命周期钩子\nonMounted(() => {\n  allSections.value = flattenList(AList); // 扁平化章节数据\n  calculateSectionRanges(); // 初始化章节范围\n  handleScroll(); // 页面加载时检查当前滚动位置\n  window.addEventListener(\"scroll\", handleScroll);\n  window.addEventListener(\"resize\", calculateSectionRanges); // 窗口调整时重新计算\n});\n</script>\n\n<template>\n  <div class=\"flex justify-center pb-[50px] bg-[url('@/assets/img/bg.jpg')] bg-contain\">\n    <div class=\"w-[55%] mt-[80px] pt-[30px] relative\">\n      <div class=\"fixed right-[19%] translate-x-full\">\n        <TocList :list=\"AList\" :active-item=\"activeItem\" @update-active=\"setActiveItem\" />\n      </div>\n      <div class=\"title\" id=\"1t\">Lollipop: Making SVM Extensible</div>\n      <div class=\"text-center font-bold text-lg\">Lollipop Builders</div>\n      <br />\n      <div class=\"flex justify-evenly text-lg\">\n        <div>Dr. Yugart Song</div>\n        <div>Stepan Soin</div>\n        <div>Qinwen Wang</div>\n      </div>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"2t\">1. Background</div>\n      <div class=\"MainBody\">\n        The rapid evolution of blockchain technology has been shaped by competing design\n        philosophies, with Ethereum and Solana emerging as dominant forces in their\n        respective categories. Historically, Ethereum dominated TVL for EVM chains and\n        Solana for non-EVM chains due to their different philosophies and approaches.<br />\n        However, as network demand grew, Ethereum began ceding dominance to emerging EVM\n        chains and shifted toward L2 scaling solutions. In contrast, Solana’s monolithic\n        architecture, supported by unique technical innovations and significant\n        performance reserves, avoids such fragmentation at the expense of high bandwidth\n        and speed.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        At the same time, the idea of rollups also offers an important opportunity for\n        dApps: the ability to create customizable environments. The end result is an\n        interesting situation: L2s fragment Ethereum's liquidity and user base, while\n        L2/L3 appchains make this process even more extensive. Solana is a proponent of a\n        monolithic ecosystem. <br />However, the benefits of customizable environments for\n        different use cases are obvious. Therefore, the Lollipop team set out to realize a\n        novel approach to increase the functionality and flexibility of the Solana\n        ecosystem while maintaining its monolithic nature.\n      </div>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"3t\">\n        2. Catalysts for Network Extension: Layer 2 - Path to Fragmentation\n      </div>\n      <div class=\"MainBody\">\n        The evolution of Ethereum scaling, from Plasma in 2017 to Optimistic and\n        zk-rollups, highlights the necessity of scaling for ecosystems built on fragmented\n        chains. However, it is important to note that part of Ethereum’s L2-based TVL is\n        underpinned by bridged ETH, which remains locked on L1.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        That is, the shift to L2 solutions on Ethereum has introduced a \"vampire effect”.\n        This is evidenced by a sharp decline in Ethereum's fee revenues following the\n        implementation of EIP-4844. Analysts, including Justin Bons from Cyber Capital,\n        emphasize that Ethereum’s fee growth is increasingly constrained, as L2 solutions\n        now take up a significant portion of transaction fees.\n      </div>\n      <div class=\"img\">\n        <img src=\"../assets/img/图片 1.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">\n        Figure 1: ETH supply dynamics. Source:\n        <a href=\"https://ultrasound.money/\">ultrasound.money</a>\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        This trend undermines Ethereum's deflationary model, which is based on burning ETH\n        at a cost. Lower activity on Ethereum's L1 decreases the burn rate, leading to\n        higher supply growth and weakening the intended deflationary dynamic.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        In this context, Solana's approach of preserving the chain’s identity while\n        maintaining a monolithic structure with a unified ecosystem philosophy seems\n        highly attractive.\n      </div>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"4t\">3. Why Solana</div>\n      <div class=\"MainBody\">\n        The Solana blockchain presents a novel blockchain architecture compared to\n        previous systems designed around the Ethereum Virtual Machine (EVM). Solana\n        implements Proof-of-Stake (PoS) as a sybil control mechanism, alongside one of its\n        key innovations – the Proof-of-History (PoH) algorithm. PoH is a type of\n        verifiable delay function (VDF) that allows for the ordering and timestamping of\n        transactions sent over the network. In addition, Solana stands apart for its use\n        of high-performance hardware, mempool-less transaction forwarding protocol (Gulf\n        Stream) and a different take on the traditional blockchain account model, – which\n        is similar to the file system of the Linux operating system.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Solana follows a monolithic design philosophy, enabling significantly higher\n        scalability through its distinctive consensus mechanism, technical innovations,\n        and ongoing architectural optimizations to enhance speed and throughput.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Solana also benefits from a strong developer community: over 2,500 developers are\n        actively involved. Together, this has driven remarkable growth. Solana’s TVL\n        increased from a low of $210m in 2023 to a current level of $7.73b in 2024—an\n        almost 35x growth. Trading volume on Solana DEXs has surged 200-300x year-on-year\n        compared to November 2022, accompanied by a 5x increase in DAU since summer 2023.\n        By November 14, Solana’s trading volume had surpassed Ethereum's by more than 4x.\n        The number of active wallets is also actively growing, with a peak of 9.4m active\n        users in one day on October 22, 2024.\n      </div>\n      <br />\n      <div class=\"img\">\n        <img src=\"../assets/img/图片 2.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">\n        Figure 2: Solana DEXes trading volumes and active wallets dynamics. Source:<a\n          href=\"https://dune.com/queries/3084516/5142955\"\n          >Dune</a\n        >,<a href=\"https://app.artemis.xyz/project/solana?from=projects\"> Artemis</a>\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Solana is a very strong ecosystem with a large number of users and developers. And\n        it is experiencing exponential growth in the number of users and activity. These\n        developments underline the growing importance of Solana as a leading non-EVM\n        chain.\n      </div>\n      <div class=\"img\">\n        <img src=\"../assets/img/图片 3.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">\n        Figure 3: Non-EVM blockchains TVL comparison. Source:\n        <a href=\"https://defillama.com/chains/Non-EVM\">DefiLlama</a>\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        The dApps significantly improve their functionality by increasing acceptance and\n        user-frendliness. It is becoming apparent that Solana is becoming a super shift\n        that demands exceptional features. But some apps such as Zeta Market are going to\n        launch their own instances (L2) for the same purpose. One fact stands above all –\n        the SVM works great in isolation. This is well documented through Pyth Net, Cube\n        Exchange, and others leveraging the SVM for appchains, or what the Solana\n        ecosystem refers to as Solana Permissioned Environments (SPEs).\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        While there is a use case for standalone “application-specific” SVM chains that\n        are not significantly different from the vanilla Solana client, we believe that\n        vanilla Solana forks that serve as Layer 2 are of limited value. And it's very\n        clear that Solana needs a separate approach in order not to jeopardize its\n        monolithic nature. This is why we have developed the Lollipop Network Extensions,\n        which should significantly change the landscape of the Solana ecosystem.\n      </div>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"5t\">4. What do we need?</div>\n      <div class=\"Second\" id=\"5.1t\">4.1 What is Network Extension?</div>\n      <div class=\"MainBody\">\n        All of the above factors have led to conversations in the Solana community about\n        the need to move some of the computing to somewhere else. Extensions themselves\n        are not a new phenomenon for Solana. Back in 2022 Token Extensions appeared, which\n        offered new features such as Confidential transfers, Transfer hooks, Metadata\n        pointer. So when it came to improving Solana's functionality and scaling dApps, it\n        was logical to propose the name Network Extensions (NE).\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Based on insights and discussions within the Solana ecosystem, we identified\n        several fundamental principles that should define the architecture and\n        functionality of Network Extensions. These principles are designed to ensure\n        seamless integration with the Solana network while preserving the core benefits of\n        its architecture:\n      </div>\n      <br />\n      <div class=\"MainBody font-bold pl-6\">\n        1. No fragmentation of liquidity <br />\n        2. No fragmentation of the user base <br />\n        3. For users, theinteraction with the environment remains the same as if they were\n        using Solanadirectly <br />\n        4. A unified technology stack <br />\n        5. Network Extensions send transactions directlyto Solana validators\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        In the case of NE, Solana is a true settlement layer, the flow of funds occurs at\n        this level. And NE is a true execution layer that is not fragmented from the\n        mainchain and works with Accounts and Programs directly on this layer.\n      </div>\n      <div class=\"img\">\n        <img src=\"../assets/img/图片 4.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">Figure 4: Simplified view of Network Extension flow</div>\n      <br />\n      <div class=\"MainBody\">\n        These things are the main difference between NEs and rollups, sidechains,\n        different variants of L2s, L3s, appchains, and so on. L2s collect transactions and\n        send their proofs to L1s. Network Extensions send transactions directly to Solana\n        validators. Sidechains must not have a direct connection to the mainchain.\n        Subchains in their current implementation imply the possibility of building\n        separate ecosystems, and liquidity as well as users in them are concentrated in\n        separate spaces. NEs work directly with Solana liquidity and do not lead to the\n        formation of disparate chains, spaces and communities.\n      </div>\n      <br />\n      <div class=\"Second\" id=\"5.2t\">4.2 Market Demand</div>\n      <div class=\"MainBody\">\n        Currently, Lollipop is the first solution to offer a native direct connection with\n        Solana without fragmenting liquidity or the user base. Lollipop's native\n        environment can serve as a foundation for both new products and the migration of\n        existing dApps without breaking the connection to the Solana ecosystem and\n        liquidity. For existing dApps, this will improve speed, stability, and extend\n        functionality.\n      </div>\n      <div class=\"img\">\n        <img src=\"../assets/img/图片 5.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">Figure 5: Lollipop comparative landscape</div>\n      <br />\n      <div class=\"MainBody\">\n        NEs can operate infrastructure solutions for Solana and its dApps, as well as the\n        dApps themselves. This concept is remotely similar to the idea of appchains and\n        L2s. Multiple dApps are transitioning to their own dedicated instances to improve\n        performance, scalability, and user experience. There are many such solutions under\n        L2: OP-Stack, Arbitrum Orbit, Polygon CDK, StarkEX, zkSync Era, Termina and\n        others. These toolkits have enabled numerous Layer 2 projects to launch\n        successfully, significantly advancing the scalability and usability of blockchain\n        networks. But as we could see above, the current approach of the Layers model with\n        fragmented environments is not suitable for the Solana monolith.\n      </div>\n      <br />\n      <div class=\"MainBody font-bold\">Notable examples include:</div>\n      <ul>\n        <li>\n          <span class=\"font-bold\">Uniswap:</span> Uniswap Labs has announced the launch of\n          Unichain, a Layer 2 blockchain designed to enhance DeFi applications. Built on\n          Optimism’s technology stack, Unichain leverages the Superchain framework to\n          facilitate seamless interoperability with other Layer 2 solutions. This\n          integration is expected to improve liquidity and user experience across various\n          DeFi platforms.\n        </li>\n        <li>\n          <span class=\"font-bold\">dYdX:</span> dYdX has transitioned to its own\n          blockchain, known as the dYdX Chain, to enhance scalability and\n          decentralization. This move is part of their v4 upgrade, aiming to provide a\n          fully decentralized, high-performance trading platform.\n        </li>\n        <li>\n          <span class=\"font-bold\">MakerDAO:</span> MakerDAO is planning to develop its own\n          native blockchain, referred to as “NewChain.” This initiative is part of the\n          fifth phase of MakerDAO’s “Endgame” roadmap, which outlines the project’s\n          long-term strategic vision.\n        </li>\n        <li>\n          <span class=\"font-bold\">Zeta Markets:</span> Zeta Markets is working on its\n          SVM-based ZetaChain, designed to improve performance and decentralize\n          derivatives trading. Built to support seamless cross-chain interactions,\n          ZetaChain aims to provide a scalable, high-performance infrastructure tailored\n          to the needs of modern financial markets.\n        </li>\n        <li>\n          <span class=\"font-bold\">Syndr:</span> Launched Syndr Chain, an app-specific\n          hybrid Layer-3 Optimistic rollup powered by Arbitrum Orbit, offering\n          institutional-grade trading capabilities\n        </li>\n        <li>\n          <span class=\"font-bold\">Worldcoin:</span> Built its decentralized, privacy-first\n          digital identity application as part of the OP Stack Superchain, aiming to\n          provide scalable and secure identity verification.\n        </li>\n        <li>\n          <span class=\"font-bold\">Meliora:</span> Launched an Arbitrum Orbit-based Layer-3\n          credit protocol, offering seamless lending and borrowing by eliminating\n          dependency on oracles and liquidations.\n        </li>\n      </ul>\n      <br />\n      <div class=\"MainBody\">\n        These cases reflect a broader trend among dApps to build independent instances.\n        This allows them to optimize their operations and functionality and provide better\n        services to their users. These can be DeFi applications, games, verification and\n        identification protocols, privacy protocols, institutional and enterprise\n        solutions and so on. These environments are mainly built based on different\n        implementations of rollups. As we have seen above, rollups have a vampiric effect\n        on the base chain.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Another area that NEs could potentially cover are use cases related to AVS based\n        on restacking protocols. These include decentralized oracles, co-processors,\n        verifiable computations, decentralized sequencing, fast finalizations and others.\n        This is made possible by the adaptability of NES environments.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Another important scenario for NES is the ability to create gas-free economies\n        within the environment similar to how this is implemented in the EVM Account\n        Abstraction. This is a very useful option for protocols where users can generate a\n        large number of transactions - e.g. HFT, gaming, rebalancing protocols, dynamic\n        pools with concentrated liquidity and more.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Therefore, the Lollipop team has a non-trivial task: to ensure that dApps can\n        create customized environments from the Solana ecosystem, but with a direct\n        connection to Solana. That is, conceptually it looks like the execution is\n        off-chain in Network Extension, but settlement and finalization of actions takes\n        place on Solana. At the same time, the user's wallet itself should be located in\n        the Solana blockspace. After a long and thorough research and development process,\n        the Lollipop team has arrived at the current design of Lollipop.\n      </div>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"6t\">5. Lollipop Introduction</div>\n      <div class=\"Second\" id=\"6.1t\">5.1 Architecture</div>\n      <div class=\"MainBody\">\n        Lollipop allows projects to modify the Solana client in an off-chain execution\n        environment and seamlessly transfer the results to the Solana mainnet, eliminating\n        the need to create a separate chain. Solana does not have a global state tree,\n        which is central to ensuring secure settlement of off-chain executions back to\n        Solana mainnet. Lollipop incorporates this essential feature with Sparse Merkle\n        Trees (SMT) to cryptographically verify execution results on its Network\n        Extension. This makes Lollipop's approach uniquely suited for Solana dApps.\n      </div>\n      <div class=\"img\">\n        <img src=\"../assets/img/图片6.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">Figure 6: Lollipop architecture flow</div>\n      <br />\n      <div class=\"MainBody font-bold\">\n        Lollipop consists of several general components:\n      </div>\n      <ul>\n        <li class=\"MainBody\">Network Extensions layer</li>\n        <li class=\"MainBody\">Programs on Solana layer</li>\n        <li class=\"MainBody\">Polkadot Cloud layer</li>\n      </ul>\n      <br />\n      <div class=\"MainBody\">\n        Lollipop builds natively on Solana, leveraging its parallel execution and unique\n        transaction data structure. The key to SVM’s parallel processing capabilities lies\n        within the Solana Client itself. By modifying the Solana Client, Lollipop\n        maximizes the performance benefits of Solana’s native strengths​.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        This architecture allows dApps to seamlessly migrate from Solana’s L1 to\n        Lollipop’s NES without requiring any changes to their program code, and it\n        requires fewer resources while supporting the same tools and developer stack as\n        Solana.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        It is important to emphasize that the parallel execution of SVM is based on\n        Solana's unique transaction data structure. In each transaction, the originator\n        pre-states the account information to be read and written. This allows the SVM to\n        process a batch of transactions in an efficient parallel sequence based on this\n        account information and ensures that transactions executed in parallel do not read\n        and write to the same account at the same time. In other words, simply grafting\n        SVM onto other execution frameworks does not bring the advantages of parallel\n        processing.\n      </div>\n      <br />\n      <div class=\"Second\" id=\"6.2t\">5.2 Why Polkadot Cloud</div>\n      <div class=\"MainBody\">\n        Polkadot Cloud is set to become a trustless supercomputer for Web3 cloud services,\n        offering multicore execution, global coherence, and cost-effectiveness. By\n        leveraging Polkadot Cloud, Lollipop can fully implement its network extension\n        services with shared sequencers, decentralized data availability (DA), and\n        stateless validated contracts—all at an economical rate, thanks to Polkadot’s low\n        DOT-based pricing. Each contract runs on a dedicated core that enables parallel,\n        synchronized execution across validators, sequencers, and DA, ensuring highly\n        efficient processing.\n      </div>\n      <div class=\"img\">\n        <img src=\"../assets/img/图片 7.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">Figure 7: Lollipop architecture</div>\n      <br />\n      <div class=\"MainBody\">\n        To address these common risks, Lollipop integrates with the Polkadot Cloud, an\n        advanced decentralized network that provides support for Shared Sequencers, Data\n        Availability, and Stateless Validators setting a new standard for validation. This\n        approach allows improved decentralization of our network extensions and reduces\n        the validator costs.\n      </div>\n      <ol>\n        <li class=\"MainBody\">\n          <span class=\"font-bold\">Shared Sequencers:</span> Polkadot Cloud handles the\n          sequencing of transactions in a decentralized and transparent way, ensuring that\n          Lollipop’s Network Extensions remain efficient and trustworthy. Polkadot offers\n          tremendous advantages in terms of security, speed, and decentralization, which\n          is why we chose it as our unified shared sequencer.Shared sequencers can batch\n          multiple transactions together, reducing the number of individual transactions\n          that need to be processed on the base layer, which significantly increases\n          capacity. Once the transactions are submitted from the Lollipop ecosystem to\n          Polkadot, they are only ordered, but not executed.\n        </li>\n        <li class=\"MainBody\">\n          <span class=\"font-bold\">Stateless Validators:</span> The Stateless Validator\n          contract on Polkadot Cloud will break down the complete validation task into\n          small chunks, which are then distributed to the validator network. Lollipop\n          significantly reduces the hardware requirements for participants, and makes it\n          easier for nodes to join and leave the network without needing access to the\n          full state.\n        </li>\n        <li class=\"MainBody\">\n          <span class=\"font-bold\">Data Availability:</span> Solana has strict transaction\n          size limitations of 1232 bytes, which can be challenging for rollup-based DA\n          solutions. By implementing extended DA on the Polkadot Cloud, Lollipop ensures\n          secure and decentralized data management, overcoming the limitations of Solana’s\n          native DA solutions​. In addition, this design retains the ability to audit data\n          on Solana.\n        </li>\n      </ol>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"7t\">6. Key Technology</div>\n      <div class=\"Second\" id=\"7.1t\">6.1 SVM and Parallelization</div>\n      <div class=\"MainBody\">\n        Solana's SVM (Solana Virtual Machine) is an efficient smart contract execution\n        environment that uses parallel transaction processing and state-independent design\n        to enable multiple transactions to be executed simultaneously, resulting in\n        significantly higher throughput and lower latency. The SVM supports programming\n        languages such as Rust and C and allows developers to easily build\n        high-performance decentralized applications, fueling the rapid growth of the\n        Solana ecosystem.\n      </div>\n      <br />\n      <div class=\"MainBoay\">\n        It is important to emphasize that SVM parallel execution relies on Solana's unique\n        transaction data structure. For each transaction, the originator pre-states the\n        account information to be read and written. This allows the SVM to process a batch\n        of transactions in an efficient parallel order based on these accounts'\n        information, ensuring that transactions executed in parallel do not read and write\n        to the same account at the same time. In other words, simply grafting SVM onto\n        other execution frameworks does not provide the advantages of parallel processing.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Therefore, we chose to use Solana Client as our base execution framework.\n      </div>\n      <br />\n      <div class=\"Second\" id=\"7.2t\">\n        6.2 Cryptography Settlement Protocol based on SMT\n      </div>\n      <div class=\"MainBody\">\n        A sparse Merkle tree (SMT) is a type of cryptographic data structure that combines\n        both a traditional Merkle tree and a Patricia tree data structure to efficiently\n        store a large set of key-value pairs. The advantage of an SMT over a traditional\n        Merkle tree is that tree nodes are organized in such a way that only certain nodes\n        need to be stored, typically those that contain non-empty values or that are on\n        the path to a leaf node with a value — this is what defines them as “sparse”.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Overall, they allow compact proofs (Merkle proofs) that a particular key-value\n        pair is or is not contained in the tree, without revealing the values themselves.\n        This leads to an optimization of storage and computational efficiency. The\n        relevant use cases for SMTs in Layer 2 solutions are state commitment and state\n        verification. State commitment refers to Layer 2 solutions that commit the state\n        of off-chain transactions (of Layer 1). By committing this state on Layer 1,\n        participants of Layer 2 can prove the validity of their off-chain transactions\n        without disclosing the entire state or requiring the Layer 1 blockchain to process\n        every off-chain transaction.\n      </div>\n      <div class=\"img\">\n        <img src=\"../assets/img/图片 8.png\" alt=\"\" />\n      </div>\n      <div class=\"text-center\">Figure 8: Fraud Proof</div>\n      <br />\n      <div class=\"MainBody\">\n        Since the conflicting transaction was found, we must now replay this transaction\n        to determine which node is lying.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Previously, we found that we have already compiled an SVM into rBPF (Solana\n        bytecode) as part of our Solana program.\n      </div>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"7.3t\">6.3 Stateless Verification</div>\n      <div class=\"MainBody\">\n        If you want to run a validator on the Solana mainnet that needs to manage a large\n        global state in addition to the computing power required to process a large number\n        of transactions in a timely manner, you will likely pay $1,500 to $2,000 per month\n        in server fees.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        These costs are not conducive to setting up a validator through a third party,\n        which is why we use the stateless validator method.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        With the SMT built by us and the global state root submitted to the consensus\n        layer, the validator does not need to maintain the global state, but only needs to\n        synchronize the global state root with the consensus layer.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        The blocker is then asked to provide the input required for each transaction and\n        the output produced. In this way, validators can validate transactions at low\n        cost, and a large number of validators independently validate different\n        transactions to ensure that all transactions are correct.\n      </div>\n      <br />\n      <br />\n      <div class=\"prologue\" id=\"8t\">7. Conclusion</div>\n      <div class=\"MainBody\">\n        The development of network extensions with Lollipop is an important step towards\n        improving the functionality of dApps and protocols in the Solana ecosystem. By\n        introducing a new approach to the development of dApps and protocols in the Solana\n        ecosystem, Lollipop provides seamless integration into the Solana mainnet while\n        maintaining a monolithic structure and avoiding fragmentation. Unlike traditional\n        Layer 2 solutions that often create isolated environments with fragmented\n        liquidity, Lollipop's direct connection to Solana ensures that liquidity and user\n        base remain unified at both layers. Lollipop Network Extensions offer developers a\n        universal framework that allows them to create customized runtime environments\n        that meet specific requirements for different use cases.\n      </div>\n      <br />\n      <div class=\"MainBody\">\n        Ultimately, the Lollipop design provides a forward-thinking solution that not only\n        improves the scalability of Solana-based dApps, but also lays the foundation for a\n        new era of high-performance blockchain environments. As the Solana ecosystem\n        continues to grow, Lollipop's unique architecture positions it as a key enabler of\n        future innovation, giving developers the tools they need to build applications\n        securely, efficiently and sustainably.\n      </div>\n      <br />\n      <div class=\"h-[1px] bg-black\"></div>\n      <br />\n      <div class=\"MainBody font-bold\">Disclaimer</div>\n      <div>\n        This document is provided for informational purposes only, and the opinions\n        expressed herein are solely those of the authors, reflecting their subjective\n        viewpoints. It does not constitute an offer to provide financial services, sell,\n        or purchase any securities or other financial instruments. This material should\n        not be construed as financial advertising, investment advice, or an inducement to\n        participate in any product, offering, or investment. All information,\n        descriptions, diagrams, forecasts, estimates, predictions, goals, outlooks, and/or\n        opinions contained in this document are subject to change without prior notice.\n        Authors have endeavored to adhere to principles of transparency and diligence in\n        the preparation of this document, its content reflects information current as of\n        the publication date and is provided without any guarantees or warranties of any\n        kind. This document may be revised or updated periodically at the discretion of\n        the authors.\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\nul li {\n  padding-left: 20px;\n  position: relative;\n}\nul li::after {\n  top: 7px;\n  content: \"\";\n  position: absolute !important;\n  left: 5px;\n  border-radius: 50%;\n  width: 7px;\n  height: 7px;\n  background: #000;\n}\nol li {\n  padding-left: 40px;\n  position: relative;\n}\nol li::after {\n  top: 11px;\n  content: \"\";\n  position: absolute !important;\n  left: 15px;\n  width: 7px;\n  height: 1px;\n  background: #000;\n}\n\n.title {\n  border-bottom: 1px solid #eee;\n  padding-bottom: 0.3em;\n  font-size: 2.5em;\n  text-align: center;\n  font-weight: bold;\n  margin-bottom: 16px;\n}\n.prologue {\n  border-bottom: 1px solid #eee;\n  padding-bottom: 0.3em;\n  font-size: 26px;\nfont-weight: bold;\nline-height: 34px;\n  margin-bottom: 16px;\n}\n.MainBody {\n  font-size: 16px;\n  font-weight: normal;\n  line-height: 24px;\n  color: #333333;\n  font-family: 'SpaceGrotesk', sans-serif;\n}\n.img {\n  max-width: 100%;\n  padding: 10px;\n}\na {\n  color: blue;\n  text-decoration: underline;\n}\n.Second {\n  text-indent: 1em;\n  border-bottom: 1px solid #eee;\n  padding-bottom: 0.3em;\n  font-size: 20px;\nfont-weight: bold;\nline-height: 28px;\n  margin-bottom: 16px;\n}\n</style>\n"],"version":3}